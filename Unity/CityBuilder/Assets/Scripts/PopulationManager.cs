using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

/// <summary>
/// The PopulationManager class is responsible for tracking the total population generated by all housing. <br/>
/// This class is a singleton and is globally accessible. <br/>
/// The population is updated once after the map is loaded. <br/>
/// The population is then periodically updated using the list of references to all housing objects.
/// </summary>
public class PopulationManager : MonoBehaviour
{
    public int population;
    public int basePopulation;
    public static PopulationManager populationManager;
    public List<House> houses;
    public Text populationText;
    public float timer;
    public float interval;
    private void Awake()
    {
        if (populationManager != null && populationManager != this)
        {
            Destroy(this);
        }
        else
        {
            populationManager = this;
        }
    }

    void Start()
    {
        timer = Time.time;
    }

    void Update()
    {
        if (Time.time > timer)
        {
            timer = Time.time + interval;
            UpdatePopulation();
        }
    }
    /// <summary>
    /// Updates the total population by going through the list of House references. This function is called periodically.
    /// </summary>
    public void UpdatePopulation()
    {
        UtilitiesManager.utilManager.UpdateUtilities();
        population = 0;
        basePopulation = 0;
        foreach (House h in houses)
        {
            population += h.population;
            basePopulation += h.basePopulation;
        }
        populationText.text = population.ToString();
    }

    /// <summary>
    /// Searches the scene for all housing objects. This function is called once immediately after the map is loaded. <br/>
    /// Houses added and deleted afterwards directly modify this list.
    /// </summary>
    public void UpdateHouses()
    {
        houses = new List<House>(FindObjectsOfType<House>());
    }
}
